// This file is generated by My::MySRefl::AutoRefl

#pragma once

#include <MySRefl/MySRefl.h>

template <>
struct My::MySRefl::TypeInfo<My::MyECS::SystemMngr>
    : My::MySRefl::TypeInfoBase<My::MyECS::SystemMngr> {
  static constexpr AttrList attrs = {};

  static constexpr FieldList fields = {
      Field{Name::constructor,
            WrapConstructor<My::MyECS::SystemMngr(My::MyECS::World *)>(),
            AttrList{
                Attr{MY_MYSREFL_NAME_ARG(0),
                     AttrList{
                         Attr{Name::name, "world"},
                     }},
            }},
      /*Field{"Register",
      static_cast<void(My::MyECS::SystemMngr::*)(std::unique_ptr<My::MyECS::System>)>(&My::MyECS::SystemMngr::Register),
          AttrList {
              Attr{MY_MYSREFL_NAME_ARG(0),
                  AttrList{
                      Attr{Name::name, "system"},
                  }
              },
          }
             },*/
      Field{
          "IsRegister",
          static_cast<bool (My::MyECS::SystemMngr::*)(std::string_view) const>(
              &My::MyECS::SystemMngr::IsRegister),
          AttrList{
              Attr{MY_MYSREFL_NAME_ARG(0),
                   AttrList{
                       Attr{Name::name, "name"},
                   }},
          }},
      Field{"Deregister",
            static_cast<void (My::MyECS::SystemMngr::*)(std::string_view)>(
                &My::MyECS::SystemMngr::Deregister),
            AttrList{
                Attr{MY_MYSREFL_NAME_ARG(0),
                     AttrList{
                         Attr{Name::name, "name"},
                     }},
            }},
      Field{"Accept", &My::MyECS::SystemMngr::Accept,
            AttrList{
                Attr{MY_MYSREFL_NAME_ARG(0),
                     AttrList{
                         Attr{Name::name, "listener"},
                     }},
            }},
  };
};
