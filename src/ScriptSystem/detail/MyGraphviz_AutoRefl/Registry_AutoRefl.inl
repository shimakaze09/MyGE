// This file is generated by My::MySRefl::AutoRefl

#pragma once

#include <MySRefl/MySRefl.h>

template <>
struct My::MySRefl::TypeInfo<My::UGraphviz::Registry>
    : My::MySRefl::TypeInfoBase<My::UGraphviz::Registry> {
  static constexpr AttrList attrs = {};

  static constexpr FieldList fields = {
      Field{Name::constructor, WrapConstructor<My::UGraphviz::Registry()>()},
      Field{"GetNodes", &My::UGraphviz::Registry::GetNodes},
      Field{"GetEdges", &My::UGraphviz::Registry::GetEdges},
      Field{"GetNodeAttrs", &My::UGraphviz::Registry::GetNodeAttrs},
      Field{"GetEdgeAttrs", &My::UGraphviz::Registry::GetEdgeAttrs},
      Field{"IsRegisteredNode", &My::UGraphviz::Registry::IsRegisteredNode},
      Field{
          "IsRegisteredEdge",
          static_cast<bool (My::UGraphviz::Registry::*)(size_t, size_t) const>(
              &My::UGraphviz::Registry::IsRegisteredEdge)},
      Field{"IsRegisteredEdge",
            static_cast<bool (My::UGraphviz::Registry::*)(
                std::string_view, std::string_view) const>(
                &My::UGraphviz::Registry::IsRegisteredEdge)},
      Field{"GetNodeIndex", &My::UGraphviz::Registry::GetNodeIndex},
      Field{"GetEdgeIndex", &My::UGraphviz::Registry::GetEdgeIndex},
      Field{"RegisterNode", &My::UGraphviz::Registry::RegisterNode},
      Field{"RegisterEdge", &My::UGraphviz::Registry::RegisterEdge},
      Field{"RegisterNodeAttr", &My::UGraphviz::Registry::RegisterNodeAttr},
      Field{"RegisterEdgeAttr", &My::UGraphviz::Registry::RegisterEdgeAttr},
      Field{"DeregisterNodeAttr", &My::UGraphviz::Registry::DeregisterNodeAttr},
      Field{"DeregisterEdgeAttr", &My::UGraphviz::Registry::DeregisterEdgeAttr},
  };
};
