// This file is generated by My::MySRefl::AutoRefl

#pragma once

#include <MySRefl/MySRefl.h>

template <>
struct My::MySRefl::TypeInfo<My::MyECS::RTDCmptTraits>
    : TypeInfoBase<My::MyECS::RTDCmptTraits> {
#ifdef MY_MYSREFL_NOT_USE_NAMEOF
  static constexpr char name[26] = "My::MyECS::RTDCmptTraits";
#endif
  static constexpr AttrList attrs = {};
  static constexpr FieldList fields = {
      Field{TSTR("DefaultAlignment"), &Type::DefaultAlignment},
      Field{TSTR("Clear"), &Type::Clear},
      Field{TSTR("RegisterSize"), &Type::RegisterSize},
      Field{TSTR("RegisterAlignment"), &Type::RegisterAlignment},
      Field{TSTR("RegisterDefaultConstructor"),
            &Type::RegisterDefaultConstructor},
      Field{TSTR("RegisterCopyConstructor"), &Type::RegisterCopyConstructor},
      Field{TSTR("RegisterMoveConstructor"), &Type::RegisterMoveConstructor},
      Field{TSTR("RegisterMoveAssignment"), &Type::RegisterMoveAssignment},
      Field{TSTR("RegisterDestructor"), &Type::RegisterDestructor},
      Field{TSTR("RegisterName"), &Type::RegisterName},
      Field{TSTR("GetSizeofs"), &Type::GetSizeofs},
      Field{TSTR("GetAlignments"), &Type::GetAlignments},
      Field{TSTR("GetDefaultConstructors"), &Type::GetDefaultConstructors},
      Field{TSTR("GetCopyConstructors"), &Type::GetCopyConstructors},
      Field{TSTR("GetMoveConstructors"), &Type::GetMoveConstructors},
      Field{TSTR("GetMoveAssignments"), &Type::GetMoveAssignments},
      Field{TSTR("GetDestructors"), &Type::GetDestructors},
      Field{TSTR("GetNames"), &Type::GetNames},
      Field{TSTR("Sizeof"), &Type::Sizeof},
      Field{TSTR("Alignof"), &Type::Alignof},
      Field{TSTR("DefaultConstruct"), &Type::DefaultConstruct},
      Field{TSTR("CopyConstruct"), &Type::CopyConstruct},
      Field{TSTR("MoveConstruct"), &Type::MoveConstruct},
      Field{TSTR("MoveAssign"), &Type::MoveAssign},
      Field{TSTR("Destruct"), &Type::Destruct},
      Field{TSTR("Nameof"), &Type::Nameof},
      Field{TSTR("Deregister"),
            static_cast<MyECS::RTDCmptTraits& (
                Type::*)(MyECS::CmptType) noexcept>(&Type::Deregister)},
  };
};
